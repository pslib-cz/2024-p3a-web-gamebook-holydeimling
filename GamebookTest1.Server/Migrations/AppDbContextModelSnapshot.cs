// <auto-generated />
using GamebookTest1.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GamebookTest1.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GamebookTest1.Server.Models.Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CharacterId"));

                    b.Property<string>("CharacterFirstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CharacterNickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CharacterSecondname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CharacterId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            CharacterFirstname = "John",
                            CharacterNickname = "JD",
                            CharacterSecondname = "Doe",
                            Images = "[\"image1\",\"image2\"]"
                        });
                });

            modelBuilder.Entity("GamebookTest1.Server.Models.CharacterPosition", b =>
                {
                    b.ToTable("CharacterPosition");
                });

            modelBuilder.Entity("GamebookTest1.Server.Models.CharacterSize", b =>
                {
                    b.ToTable("CharacterSize");
                });

            modelBuilder.Entity("GamebookTest1.Server.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            ItemDescription = "Description1",
                            ItemImage = "image1",
                            ItemName = "Item1"
                        });
                });

            modelBuilder.Entity("GamebookTest1.Server.Models.ItemPosition", b =>
                {
                    b.ToTable("ItemPosition");
                });

            modelBuilder.Entity("GamebookTest1.Server.Models.ItemSize", b =>
                {
                    b.ToTable("ItemSize");
                });

            modelBuilder.Entity("GamebookTest1.Server.Models.Scene", b =>
                {
                    b.Property<int>("SceneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SceneId"));

                    b.Property<string>("BackGroundImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SceneName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SceneId");

                    b.ToTable("Scenes");

                    b.HasData(
                        new
                        {
                            SceneId = 1,
                            BackGroundImage = "image1",
                            SceneName = "Scene1"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
